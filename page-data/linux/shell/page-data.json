{"componentChunkName":"component---src-templates-docs-js","path":"/linux/shell","result":{"data":{"site":{"siteMetadata":{"title":"Style guides and learning materials for devs, to build lightning fast apps ðŸš€ | learningHub","docsLocation":"https://github.com/neoito-hub/learningHub"}},"mdx":{"fields":{"id":"98b9e4e1-d462-5f97-8b69-f951ad7ac175","title":"Shell","slug":"/linux/shell"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Shell\"), mdx(\"p\", null, \"The shell is the thing that stares at you when you open up a terminal\\non your machine. It usually looks like\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"user@ntpl-lap-206 ~$\\n\")), mdx(\"p\", null, \"We type in commands and we get the output. A good shell environment, is\\nconfigured for you, when you install the config files\\nfrom \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/neoito-hub/dotfiles\"\n  }), \"neoito-hub\"), \".\"), mdx(\"h2\", null, \"Adding to $PATH\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$PATH\"), \" variable stores the list locations where the shell looks for binaries.\\nDo a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ which ls\"), \". The output should be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/bin/ls\"), \". Do an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ echo $PATH\"), \" on\\nthe terminal.\"), mdx(\"p\", null, \"So, if we want to add binaries/executables in a particular folder\\n(example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home/akts/Programs/mongodb/bin\"), \"),\\nto the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$PATH\"), \" variable, execute\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"export PATH=\\\"$HOME/Programs/mongodb/bin:$PATH\\\"\\n\")), mdx(\"h2\", null, \"Environment Variables\"), mdx(\"p\", null, \"To figure out what shell we're using, do a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ echo $SHELL\"), \". If we're running\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bash\"), \", the file to set environment variables will the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$HOME/.bash_profile\"), \". For\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zsh\"), \", it'd be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$HOME/.zprofile\")), mdx(\"p\", null, \"Here's an excrept from a sample \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bash_profile\"), \" file.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"export GOPATH=\\\"$HOME/go\\\"\\nexport GOROOT=\\\"$HOME/Programs/go\\\"\\nexport PATH=\\\"$PATH:$GOROOT/bin\\\"\\n\")), mdx(\"h2\", null, \"CLI Cheatsheet\"), mdx(\"h3\", null, \"System information\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Display Linux system information\\nuname -a\\n\\n# Display kernel release information\\nuname -r\\n\\n# Display Linux system information\\nuname -a\\n\\n# Display kernel release information\\nuname -r\\n\\n# Show all network interfaces\\nip a\\n\")), mdx(\"h3\", null, \"Monitoring\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Display and manage the top processes\\ntop\\n\\n# Interactive process viewer (top alternative) - sudo apt install htop\\nhtop\\n\\n# Capture and display all packets on interface eth0\\ntcpdump -i eth0\\n\\n# Monitor all traffic on port 80 ( HTTP )\\ntcpdump -i eth0 'port 80'\\n\")), mdx(\"h3\", null, \"User Management\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Add the akts account to the docker group\\nusermod -aG docker akts\\n\\n\")), mdx(\"h3\", null, \"File and directories\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# List all files in a long listing (detailed) format\\nls -al\\n\\n# Display the present working directory\\npwd\\n\\n# Create a directory\\nmkdir directory\\n\\n# Remove (delete) file\\nrm file\\n\\n# Remove the directory and its contents recursively\\nrm -r directory\\n\\n# Force removal of file without prompting for confirmation\\nrm -f file\\n\\n# Forcefully remove directory recursively\\nrm -rf directory\\n\\n# Copy file1 to file2\\ncp file1 file2\\n\\n# Copy source_directory recursively to destination. If destination exists, copy source_directory into destination, otherwise create destination with the contents of source_directory.\\ncp -r source_directory destination\\n\\n# Rename or move file1 to file2. If file2 is an existing directory, move file1 into directory file2\\nmv file1 file2\\n\\n# Create symbolic link to linkname\\nln -s /path/to/file linkname\\n\\n# Create an empty file or update the access and modification times of file.\\ntouch file\\n\\n# View the contents of file\\ncat file\\n\\n# Browse through a text file\\nless file\\n\\n# Display the first 10 lines of file\\nhead file\\n\\n# Display the last 10 lines of file\\ntail file\\n\\n# Display the last 10 lines of file and \\\"follow\\\" the file as it grows.\\ntail -f file\\n\")), mdx(\"h3\", null, \"Process Management\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Display your currently running processes\\nps\\n\\n# Display all the currently running processes on the system.\\nps -ef\\n\\n# Display process information for processname\\nps -ef | grep processname\\n\\n# Display and manage the top processes\\ntop\\n\\n# Interactive process viewer (top alternative)\\nhtop\\n\\n# Kill process with process ID of pid\\nkill pid\\n\\n# Kill all processes named processname\\nkillall processname\\n\\n# Start program in the background\\nprogram &\\n\\n# Display stopped or background jobs\\nbg\\n\\n# Brings the most recent background job to foreground\\nfg\\n\\n# Brings job n to the foreground\\nfg n\\n\")), mdx(\"h3\", null, \"Archiving\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Create tar named archive.tar containing directory.\\ntar cf archive.tar directory\\n\\n# Extract the contents from archive.tar.\\ntar xf archive.tar\\n\\n# Create a gzip compressed tar file name archive.tar.gz.\\ntar czf archive.tar.gz directory\\n\\n# Extract a gzip compressed tar file.\\ntar xzf archive.tar.gz\\n\\n# Create a tar file with bzip2 compression\\ntar cjf archive.tar.bz2 directory\\n\\n# Extract a bzip2 compressed tar file.\\ntar xjf archive.tar.bz2\\n\")), mdx(\"h3\", null, \"Installing packages\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Install software from source code.\\ntar zxvf sourcecode.tar.gz\\ncd sourcecode\\n./configure\\nmake\\nmake install\\n\\n# For .deb files, use the dpkg tool with root privilleges\\nsudo dpkg -i file.deb\\n\")), mdx(\"p\", null, \"The above list is taken directly from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.linuxtrainingacademy.com/linux-commands-cheat-sheet/\"\n  }), \"lta\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#shell","title":"Shell","items":[{"url":"#adding-to-path","title":"Adding to $PATH"},{"url":"#environment-variables","title":"Environment Variables"},{"url":"#cli-cheatsheet","title":"CLI Cheatsheet","items":[{"url":"#system-information","title":"System information"},{"url":"#monitoring","title":"Monitoring"},{"url":"#user-management","title":"User Management"},{"url":"#file-and-directories","title":"File and directories"},{"url":"#process-management","title":"Process Management"},{"url":"#archiving","title":"Archiving"},{"url":"#installing-packages","title":"Installing packages"}]}]}]},"parent":{"__typename":"File","relativePath":"linux/shell.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/angular","title":"Angular"}}},{"node":{"fields":{"slug":"/git","title":"Git"}}},{"node":{"fields":{"slug":"/","title":"Developer's Guide"}}},{"node":{"fields":{"slug":"/js-concept-list","title":"Js Concept List"}}},{"node":{"fields":{"slug":"/linux","title":"Linux"}}},{"node":{"fields":{"slug":"/nativescript","title":"Nativescript"}}},{"node":{"fields":{"slug":"/newcomers-references","title":"Newcomers References"}}},{"node":{"fields":{"slug":"/newcomers","title":"Newcomers"}}},{"node":{"fields":{"slug":"/python","title":"Python"}}},{"node":{"fields":{"slug":"/react","title":"React"}}},{"node":{"fields":{"slug":"/style-guide","title":"Style Guide"}}},{"node":{"fields":{"slug":"/ui-mastery","title":"Ui Mastery"}}},{"node":{"fields":{"slug":"/vue","title":"Vue"}}},{"node":{"fields":{"slug":"/linux/shell","title":"Shell"}}},{"node":{"fields":{"slug":"/react/Tutorial","title":"Tutorial - Beginner"}}},{"node":{"fields":{"slug":"/ui-mastery/1-Introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/ui-mastery/11-SASS-introduction","title":"SASS"}}},{"node":{"fields":{"slug":"/ui-mastery/12-SCSS-introduction","title":"SCSS"}}},{"node":{"fields":{"slug":"/ui-mastery/14-UI-debug-tools","title":"UI Debug Tools"}}},{"node":{"fields":{"slug":"/ui-mastery/15-Optimization","title":"Optimization"}}},{"node":{"fields":{"slug":"/ui-mastery/16-UI-standards","title":"UI standards"}}},{"node":{"fields":{"slug":"/ui-mastery/17-progressive-web-apps","title":"Progressive web apps"}}},{"node":{"fields":{"slug":"/ui-mastery/18.workshop-practice-1","title":"Workshop practice 1"}}},{"node":{"fields":{"slug":"/ui-mastery/19-workshop-practice-2","title":"Workshop practice 2"}}},{"node":{"fields":{"slug":"/ui-mastery/19-workshop-practice-3","title":"Workshop practice 3"}}},{"node":{"fields":{"slug":"/ui-mastery/2-HTML","title":"HTML"}}},{"node":{"fields":{"slug":"/ui-mastery/22-workshop-practise-4","title":"Workshop practice 4"}}},{"node":{"fields":{"slug":"/ui-mastery/23-workshop-practise-5","title":"Workshop practice 5"}}},{"node":{"fields":{"slug":"/ui-mastery/24-workshop-practise-6","title":"Workshop practice 6"}}},{"node":{"fields":{"slug":"/ui-mastery/25-workshop-practise-7","title":"Workshop practice 7"}}},{"node":{"fields":{"slug":"/ui-mastery/26-workshop-practise-8","title":"Workshop practice 8"}}},{"node":{"fields":{"slug":"/ui-mastery/3-HTML-Accessibility","title":"HTML Accessibility"}}},{"node":{"fields":{"slug":"/ui-mastery/4-CSS","title":"CSS"}}},{"node":{"fields":{"slug":"/ui-mastery/5-CSS-Naming","title":"Naming Standard - BEM"}}},{"node":{"fields":{"slug":"/ui-mastery/6-JS-basics","title":"JS basics"}}},{"node":{"fields":{"slug":"/ui-mastery/7-flexbox-and-media-query","title":"Learn CSS Flexbox & Media Queries"}}},{"node":{"fields":{"slug":"/ui-mastery/9-Introduction-of-bootstrap","title":"Bootstrap Basics"}}},{"node":{"fields":{"slug":"/vue/1-what-and-why-Vue","title":"1 What And Why Vue"}}},{"node":{"fields":{"slug":"/vue/2-getting-started","title":"2 Getting Started"}}},{"node":{"fields":{"slug":"/vue/3-data-and-props","title":"3 Data And Props"}}},{"node":{"fields":{"slug":"/vue/4-dive-deeper","title":"4 Dive Deeper"}}},{"node":{"fields":{"slug":"/vue/5-getting-started-chapter-2","title":"5 Getting Started Chapter 2"}}},{"node":{"fields":{"slug":"/vue/6-the-final-problem-part-2","title":"6 The Final Problem Part 2"}}},{"node":{"fields":{"slug":"/vue/7-conclusion","title":"7 Conclusion"}}},{"node":{"fields":{"slug":"/react/Tutorial/1-what-and-why-react","title":"1 What And Why React"}}},{"node":{"fields":{"slug":"/react/Tutorial/2-setting-things-up","title":"2 Setting Things Up"}}},{"node":{"fields":{"slug":"/react/Tutorial/3-states-props-and-more-part1","title":"3 States Props And More Part 1"}}},{"node":{"fields":{"slug":"/react/Tutorial/4-states-props-and-more-part2","title":"4 States Props And More Part 2"}}},{"node":{"fields":{"slug":"/react/Tutorial/5-useEffect","title":"5 Use Effect"}}},{"node":{"fields":{"slug":"/react/Tutorial/6-conclusion","title":"6 Conclusion"}}},{"node":{"fields":{"slug":"/react/style-guide/style-guide","title":"Style Guide"}}}]}},"pageContext":{"id":"98b9e4e1-d462-5f97-8b69-f951ad7ac175"}}}